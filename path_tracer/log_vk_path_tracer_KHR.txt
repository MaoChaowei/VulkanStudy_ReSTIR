_______________
Vulkan Version:
 - available:  1.4.313
 - requesting: 1.2.0
___________________________
Available Instance Layers :
VK_LAYER_NV_optimus (v. 1.4.303 1) : NVIDIA Optimus layer
VK_LAYER_NV_present (v. 1.4.303 1) : NVIDIA GR2608 layer
VK_LAYER_EOS_Overlay (v. 1.2.136 1) : Vulkan overlay layer for Epic Online Services
VK_LAYER_VALVE_steam_overlay (v. 1.3.207 1) : Steam Overlay Layer
VK_LAYER_VALVE_steam_fossilize (v. 1.4.303 1) : Steam Pipeline Caching Layer
VK_LAYER_LUNARG_api_dump (v. 1.4.313 2) : LunarG API dump layer
VK_LAYER_LUNARG_gfxreconstruct (v. 1.4.313 400005) : GFXReconstruct Capture Layer Version 1.0.5
VK_LAYER_KHRONOS_synchronization2 (v. 1.4.313 1) : Khronos Synchronization2 layer
VK_LAYER_KHRONOS_validation (v. 1.4.313 1) : Khronos Validation Layer
VK_LAYER_LUNARG_monitor (v. 1.4.313 1) : Execution Monitoring Layer
VK_LAYER_LUNARG_screenshot (v. 1.4.313 1) : LunarG image capture layer
VK_LAYER_KHRONOS_profiles (v. 1.4.313 1) : Khronos Profiles layer
VK_LAYER_KHRONOS_shader_object (v. 1.4.313 1) : Khronos Shader object layer
VK_LAYER_LUNARG_crash_diagnostic (v. 1.4.313 1) : Crash Diagnostic Layer is a crash/hang debugging tool that helps determines GPU progress in a Vulkan application.

Available Instance Extensions :
VK_KHR_device_group_creation (v. 1)
VK_KHR_display (v. 23)
VK_KHR_external_fence_capabilities (v. 1)
VK_KHR_external_memory_capabilities (v. 1)
VK_KHR_external_semaphore_capabilities (v. 1)
VK_KHR_get_display_properties2 (v. 1)
VK_KHR_get_physical_device_properties2 (v. 2)
VK_KHR_get_surface_capabilities2 (v. 1)
VK_KHR_surface (v. 25)
VK_KHR_surface_protected_capabilities (v. 1)
VK_KHR_win32_surface (v. 6)
VK_EXT_debug_report (v. 10)
VK_EXT_debug_utils (v. 2)
VK_EXT_direct_mode_display (v. 1)
VK_EXT_surface_maintenance1 (v. 1)
VK_EXT_swapchain_colorspace (v. 5)
VK_NV_external_memory_capabilities (v. 1)
VK_KHR_portability_enumeration (v. 1)
VK_LUNARG_direct_driver_loading (v. 1)
______________________
Used Instance Layers :
VK_LAYER_KHRONOS_validation
VK_LAYER_LUNARG_monitor

Used Instance Extensions :
VK_EXT_debug_utils
VK_KHR_surface
VK_KHR_win32_surface
VK_EXT_debug_utils
____________________
Devices : 2
0: NVIDIA GeForce RTX 4070 Laptop GPU
  - Compatible 
1: Intel(R) RaptorLake-S Mobile Graphics Controller
  - Missing extensions: VK_KHR_acceleration_structure VK_KHR_ray_tracing_pipeline VK_KHR_deferred_host_operations VK_KHR_ray_query 
Compatible physical devices found : 1
Using Device:
 - Device Name    : NVIDIA GeForce RTX 4070 Laptop GPU
 - Vendor         : NVIDIA
 - Driver Version : 576.160.0
 - API Version    : 1.4.303
 - Device Type    : Discrete GPU
_____________________________
Available Device Extensions :
VK_KHR_16bit_storage (v. 1)
VK_KHR_8bit_storage (v. 1)
VK_KHR_acceleration_structure (v. 13)
VK_KHR_bind_memory2 (v. 1)
VK_KHR_buffer_device_address (v. 1)
VK_KHR_calibrated_timestamps (v. 1)
VK_KHR_compute_shader_derivatives (v. 1)
VK_KHR_cooperative_matrix (v. 2)
VK_KHR_copy_commands2 (v. 1)
VK_KHR_create_renderpass2 (v. 1)
VK_KHR_dedicated_allocation (v. 3)
VK_KHR_deferred_host_operations (v. 4)
VK_KHR_depth_stencil_resolve (v. 1)
VK_KHR_descriptor_update_template (v. 1)
VK_KHR_device_group (v. 4)
VK_KHR_draw_indirect_count (v. 1)
VK_KHR_driver_properties (v. 1)
VK_KHR_dynamic_rendering (v. 1)
VK_KHR_dynamic_rendering_local_read (v. 1)
VK_KHR_external_fence (v. 1)
VK_KHR_external_fence_win32 (v. 1)
VK_KHR_external_memory (v. 1)
VK_KHR_external_memory_win32 (v. 1)
VK_KHR_external_semaphore (v. 1)
VK_KHR_external_semaphore_win32 (v. 1)
VK_KHR_format_feature_flags2 (v. 2)
VK_KHR_fragment_shader_barycentric (v. 1)
VK_KHR_fragment_shading_rate (v. 2)
VK_KHR_get_memory_requirements2 (v. 1)
VK_KHR_global_priority (v. 1)
VK_KHR_image_format_list (v. 1)
VK_KHR_imageless_framebuffer (v. 1)
VK_KHR_index_type_uint8 (v. 1)
VK_KHR_line_rasterization (v. 1)
VK_KHR_load_store_op_none (v. 1)
VK_KHR_maintenance1 (v. 2)
VK_KHR_maintenance2 (v. 1)
VK_KHR_maintenance3 (v. 1)
VK_KHR_maintenance4 (v. 2)
VK_KHR_maintenance5 (v. 1)
VK_KHR_maintenance6 (v. 1)
VK_KHR_maintenance7 (v. 1)
VK_KHR_map_memory2 (v. 1)
VK_KHR_multiview (v. 1)
VK_KHR_pipeline_binary (v. 1)
VK_KHR_pipeline_executable_properties (v. 1)
VK_KHR_pipeline_library (v. 1)
VK_KHR_present_id (v. 1)
VK_KHR_present_wait (v. 1)
VK_KHR_push_descriptor (v. 2)
VK_KHR_ray_query (v. 1)
VK_KHR_ray_tracing_maintenance1 (v. 1)
VK_KHR_ray_tracing_pipeline (v. 1)
VK_KHR_ray_tracing_position_fetch (v. 1)
VK_KHR_relaxed_block_layout (v. 1)
VK_KHR_sampler_mirror_clamp_to_edge (v. 3)
VK_KHR_sampler_ycbcr_conversion (v. 14)
VK_KHR_separate_depth_stencil_layouts (v. 1)
VK_KHR_shader_atomic_int64 (v. 1)
VK_KHR_shader_clock (v. 1)
VK_KHR_shader_draw_parameters (v. 1)
VK_KHR_shader_expect_assume (v. 1)
VK_KHR_shader_float16_int8 (v. 1)
VK_KHR_shader_float_controls (v. 4)
VK_KHR_shader_float_controls2 (v. 1)
VK_KHR_shader_integer_dot_product (v. 1)
VK_KHR_shader_maximal_reconvergence (v. 1)
VK_KHR_shader_non_semantic_info (v. 1)
VK_KHR_shader_quad_control (v. 1)
VK_KHR_shader_relaxed_extended_instruction (v. 1)
VK_KHR_shader_subgroup_extended_types (v. 1)
VK_KHR_shader_subgroup_rotate (v. 2)
VK_KHR_shader_subgroup_uniform_control_flow (v. 1)
VK_KHR_shader_terminate_invocation (v. 1)
VK_KHR_spirv_1_4 (v. 1)
VK_KHR_storage_buffer_storage_class (v. 1)
VK_KHR_swapchain (v. 70)
VK_KHR_swapchain_mutable_format (v. 1)
VK_KHR_synchronization2 (v. 1)
VK_KHR_timeline_semaphore (v. 2)
VK_KHR_uniform_buffer_standard_layout (v. 1)
VK_KHR_variable_pointers (v. 1)
VK_KHR_vertex_attribute_divisor (v. 1)
VK_KHR_video_decode_av1 (v. 1)
VK_KHR_video_decode_h264 (v. 9)
VK_KHR_video_decode_h265 (v. 8)
VK_KHR_video_decode_queue (v. 8)
VK_KHR_video_encode_av1 (v. 1)
VK_KHR_video_encode_h264 (v. 14)
VK_KHR_video_encode_h265 (v. 14)
VK_KHR_video_encode_quantization_map (v. 2)
VK_KHR_video_encode_queue (v. 12)
VK_KHR_video_maintenance1 (v. 1)
VK_KHR_video_maintenance2 (v. 1)
VK_KHR_video_queue (v. 8)
VK_KHR_vulkan_memory_model (v. 3)
VK_KHR_win32_keyed_mutex (v. 1)
VK_KHR_workgroup_memory_explicit_layout (v. 1)
VK_KHR_zero_initialize_workgroup_memory (v. 1)
VK_EXT_4444_formats (v. 1)
VK_EXT_attachment_feedback_loop_dynamic_state (v. 1)
VK_EXT_attachment_feedback_loop_layout (v. 2)
VK_EXT_blend_operation_advanced (v. 2)
VK_EXT_border_color_swizzle (v. 1)
VK_EXT_buffer_device_address (v. 2)
VK_EXT_calibrated_timestamps (v. 2)
VK_EXT_color_write_enable (v. 1)
VK_EXT_conditional_rendering (v. 2)
VK_EXT_conservative_rasterization (v. 1)
VK_EXT_custom_border_color (v. 12)
VK_EXT_depth_bias_control (v. 1)
VK_EXT_depth_clamp_control (v. 1)
VK_EXT_depth_clamp_zero_one (v. 1)
VK_EXT_depth_clip_control (v. 1)
VK_EXT_depth_clip_enable (v. 1)
VK_EXT_depth_range_unrestricted (v. 1)
VK_EXT_descriptor_buffer (v. 1)
VK_EXT_descriptor_indexing (v. 2)
VK_EXT_device_address_binding_report (v. 1)
VK_EXT_device_fault (v. 2)
VK_EXT_device_generated_commands (v. 1)
VK_EXT_discard_rectangles (v. 2)
VK_EXT_dynamic_rendering_unused_attachments (v. 1)
VK_EXT_extended_dynamic_state (v. 1)
VK_EXT_extended_dynamic_state2 (v. 1)
VK_EXT_extended_dynamic_state3 (v. 2)
VK_EXT_external_memory_host (v. 1)
VK_EXT_fragment_shader_interlock (v. 1)
VK_EXT_full_screen_exclusive (v. 4)
VK_EXT_global_priority (v. 2)
VK_EXT_global_priority_query (v. 1)
VK_EXT_graphics_pipeline_library (v. 1)
VK_EXT_hdr_metadata (v. 3)
VK_EXT_host_image_copy (v. 1)
VK_EXT_host_query_reset (v. 1)
VK_EXT_image_2d_view_of_3d (v. 1)
VK_EXT_image_robustness (v. 1)
VK_EXT_image_sliced_view_of_3d (v. 1)
VK_EXT_image_view_min_lod (v. 1)
VK_EXT_index_type_uint8 (v. 1)
VK_EXT_inline_uniform_block (v. 1)
VK_EXT_legacy_vertex_attributes (v. 1)
VK_EXT_line_rasterization (v. 1)
VK_EXT_load_store_op_none (v. 1)
VK_EXT_memory_budget (v. 1)
VK_EXT_memory_priority (v. 1)
VK_EXT_mesh_shader (v. 1)
VK_EXT_multi_draw (v. 1)
VK_EXT_mutable_descriptor_type (v. 1)
VK_EXT_nested_command_buffer (v. 1)
VK_EXT_non_seamless_cube_map (v. 1)
VK_EXT_opacity_micromap (v. 2)
VK_EXT_pageable_device_local_memory (v. 1)
VK_EXT_pci_bus_info (v. 2)
VK_EXT_pipeline_creation_cache_control (v. 3)
VK_EXT_pipeline_creation_feedback (v. 1)
VK_EXT_pipeline_library_group_handles (v. 1)
VK_EXT_pipeline_robustness (v. 1)
VK_EXT_post_depth_coverage (v. 1)
VK_EXT_present_mode_fifo_latest_ready (v. 1)
VK_EXT_primitive_topology_list_restart (v. 1)
VK_EXT_primitives_generated_query (v. 1)
VK_EXT_private_data (v. 1)
VK_EXT_provoking_vertex (v. 1)
VK_EXT_queue_family_foreign (v. 1)
VK_EXT_robustness2 (v. 1)
VK_EXT_sample_locations (v. 1)
VK_EXT_sampler_filter_minmax (v. 2)
VK_EXT_scalar_block_layout (v. 1)
VK_EXT_separate_stencil_usage (v. 1)
VK_EXT_shader_atomic_float (v. 1)
VK_EXT_shader_demote_to_helper_invocation (v. 1)
VK_EXT_shader_image_atomic_int64 (v. 1)
VK_EXT_shader_module_identifier (v. 1)
VK_EXT_shader_object (v. 1)
VK_EXT_shader_replicated_composites (v. 1)
VK_EXT_shader_subgroup_ballot (v. 1)
VK_EXT_shader_subgroup_vote (v. 1)
VK_EXT_shader_viewport_index_layer (v. 1)
VK_EXT_subgroup_size_control (v. 2)
VK_EXT_swapchain_maintenance1 (v. 1)
VK_EXT_texel_buffer_alignment (v. 1)
VK_EXT_tooling_info (v. 1)
VK_EXT_transform_feedback (v. 1)
VK_EXT_vertex_attribute_divisor (v. 3)
VK_EXT_vertex_attribute_robustness (v. 1)
VK_EXT_vertex_input_dynamic_state (v. 2)
VK_EXT_ycbcr_2plane_444_formats (v. 1)
VK_EXT_ycbcr_image_arrays (v. 1)
VK_NV_acquire_winrt_display (v. 1)
VK_NV_clip_space_w_scaling (v. 1)
VK_NV_cluster_acceleration_structure (v. 2)
VK_NV_compute_shader_derivatives (v. 1)
VK_NV_cooperative_matrix (v. 1)
VK_NV_cooperative_matrix2 (v. 1)
VK_NV_cooperative_vector (v. 4)
VK_NV_copy_memory_indirect (v. 1)
VK_NV_corner_sampled_image (v. 2)
VK_NV_coverage_reduction_mode (v. 1)
VK_NV_cuda_kernel_launch (v. 2)
VK_NV_dedicated_allocation (v. 1)
VK_NV_dedicated_allocation_image_aliasing (v. 1)
VK_NV_descriptor_pool_overallocation (v. 1)
VK_NV_device_diagnostic_checkpoints (v. 2)
VK_NV_device_diagnostics_config (v. 2)
VK_NV_device_generated_commands (v. 3)
VK_NV_device_generated_commands_compute (v. 2)
VK_NV_disk_cache_utils (v. 1)
VK_NV_external_compute_queue (v. 1)
VK_NV_external_memory (v. 1)
VK_NV_external_memory_win32 (v. 1)
VK_NV_fill_rectangle (v. 1)
VK_NV_fragment_coverage_to_color (v. 1)
VK_NV_fragment_shader_barycentric (v. 1)
VK_NV_fragment_shading_rate_enums (v. 1)
VK_NV_framebuffer_mixed_samples (v. 1)
VK_NV_geometry_shader_passthrough (v. 1)
VK_NV_inherited_viewport_scissor (v. 1)
VK_NV_internal_nvpresent (v. 1)
VK_NV_linear_color_attachment (v. 1)
VK_NV_low_latency (v. 1)
VK_NV_low_latency2 (v. 2)
VK_NV_memory_decompression (v. 1)
VK_NV_mesh_shader (v. 1)
VK_NV_optical_flow (v. 1)
VK_NV_partitioned_acceleration_structure (v. 1)
VK_NV_present_metering (v. 1)
VK_NV_raw_access_chains (v. 1)
VK_NV_ray_tracing (v. 3)
VK_NV_ray_tracing_invocation_reorder (v. 1)
VK_NV_ray_tracing_motion_blur (v. 1)
VK_NV_representative_fragment_test (v. 2)
VK_NV_sample_mask_override_coverage (v. 1)
VK_NV_scissor_exclusive (v. 2)
VK_NV_shader_atomic_float16_vector (v. 1)
VK_NV_shader_image_footprint (v. 2)
VK_NV_shader_sm_builtins (v. 1)
VK_NV_shader_subgroup_partitioned (v. 1)
VK_NV_shading_rate_image (v. 3)
VK_NV_viewport_array2 (v. 1)
VK_NV_viewport_swizzle (v. 1)
VK_NV_win32_keyed_mutex (v. 2)
VK_NVX_binary_import (v. 2)
VK_NVX_image_view_handle (v. 3)
VK_NVX_multiview_per_view_attributes (v. 1)
VK_AMD_buffer_marker (v. 1)
VK_GOOGLE_hlsl_functionality1 (v. 1)
VK_GOOGLE_user_type (v. 1)
________________________
Used Device Extensions :
VK_KHR_swapchain
VK_KHR_acceleration_structure
VK_KHR_ray_tracing_pipeline
VK_KHR_deferred_host_operations
VK_KHR_ray_query
VK_KHR_shader_clock

ERROR: VUID-VkDeviceCreateInfo-pNext-pNext 
 --> vkCreateDevice(): pCreateInfo->pNext chain includes a structure with unexpected VkStructureType VK_STRUCTURE_TYPE_SUBMIT_INFO.
pNext -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VkPhysicalDeviceFeatures2] -> [VkPhysicalDeviceVulkan11Features] -> [VkPhysicalDeviceVulkan12Features] -> [VkSubmitInfo] -> [Unknown VkStructureType 7530344] -> [Unknown VkStructureType 71398464] -> [Unknown VkStructureType 71398464]
This error is based on the Valid Usage documentation for version 313 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled.
The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid struct for extending VkDeviceCreateInfo (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/devsandqueues.html#VUID-VkDeviceCreateInfo-pNext-pNext)
ERROR: VUID-VkDeviceCreateInfo-pNext-pNext 
 --> vkCreateDevice(): pCreateInfo->pNext chain includes a structure with unknown VkStructureType (7530344).
pNext -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VkPhysicalDeviceFeatures2] -> [VkPhysicalDeviceVulkan11Features] -> [VkPhysicalDeviceVulkan12Features] -> [VkSubmitInfo] -> [Unknown VkStructureType 7530344] -> [Unknown VkStructureType 71398464] -> [Unknown VkStructureType 71398464]
This error is based on the Valid Usage documentation for version 313 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled.
The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid struct for extending VkDeviceCreateInfo (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/devsandqueues.html#VUID-VkDeviceCreateInfo-pNext-pNext)
ERROR: VUID-VkDeviceCreateInfo-pNext-pNext 
 --> vkCreateDevice(): pCreateInfo->pNext chain includes a structure with unknown VkStructureType (71398464).
pNext -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VkPhysicalDeviceFeatures2] -> [VkPhysicalDeviceVulkan11Features] -> [VkPhysicalDeviceVulkan12Features] -> [VkSubmitInfo] -> [Unknown VkStructureType 7530344] -> [Unknown VkStructureType 71398464] -> [Unknown VkStructureType 71398464]
This error is based on the Valid Usage documentation for version 313 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled.
The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid struct for extending VkDeviceCreateInfo (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/devsandqueues.html#VUID-VkDeviceCreateInfo-pNext-pNext)
ERROR: VUID-VkDeviceCreateInfo-sType-unique 
 --> vkCreateDevice(): pCreateInfo->pNext chain contains duplicate structure types: Unhandled VkStructureType appears multiple times.
The Vulkan spec states: The sType value of each structure in the pNext chain must be unique, with the exception of structures of type VkDeviceDeviceMemoryReportCreateInfoEXT or VkDevicePrivateDataCreateInfo (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/devsandqueues.html#VUID-VkDeviceCreateInfo-sType-unique)
ERROR: VUID-VkDeviceCreateInfo-pNext-pNext 
 --> vkCreateDevice(): pCreateInfo->pNext chain includes a structure with unknown VkStructureType (71398464).
pNext -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO] -> [VkPhysicalDeviceFeatures2] -> [VkPhysicalDeviceVulkan11Features] -> [VkPhysicalDeviceVulkan12Features] -> [VkSubmitInfo] -> [Unknown VkStructureType 7530344] -> [Unknown VkStructureType 71398464] -> [Unknown VkStructureType 71398464]
This error is based on the Valid Usage documentation for version 313 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled.
The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid struct for extending VkDeviceCreateInfo (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/devsandqueues.html#VUID-VkDeviceCreateInfo-pNext-pNext)
Loading File:  C:/Users/chaowei/Desktop/vk_path_tracing_demo/bin_x64/Debug/../../ReSTIR_path_tracer/path_tracer/../media/scenes/fireplace_room/fireplace_room.obj 
ERROR: VUID-VkGraphicsPipelineCreateInfo-renderPass-07609 
 --> vkCreateGraphicsPipelines(): pCreateInfos[0].pColorBlendState->attachmentCount (1) is different than VkRenderPass 0x4e000000004e pSubpasses[0].colorAttachmentCount (4).
The Vulkan spec states: If renderPass is not VK_NULL_HANDLE, the pipeline is being created with fragment output interface state, the pColorBlendState pointer is not NULL, the attachmentCount member of pColorBlendState is not ignored, and the subpass uses color attachments, the attachmentCount member of pColorBlendState must be equal to the colorAttachmentCount used to create subpass (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/pipelines.html#VUID-VkGraphicsPipelineCreateInfo-renderPass-07609)
ERROR: VUID-VkGraphicsPipelineCreateInfo-renderPass-07609 
 --> vkCreateGraphicsPipelines(): pCreateInfos[0].pColorBlendState->attachmentCount (1) is different than VkRenderPass 0x4e000000004e pSubpasses[0].colorAttachmentCount (4).
The Vulkan spec states: If renderPass is not VK_NULL_HANDLE, the pipeline is being created with fragment output interface state, the pColorBlendState pointer is not NULL, the attachmentCount member of pColorBlendState is not ignored, and the subpass uses color attachments, the attachmentCount member of pColorBlendState must be equal to the colorAttachmentCount used to create subpass (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/pipelines.html#VUID-VkGraphicsPipelineCreateInfo-renderPass-07609)
ERROR: VUID-VkDescriptorSetLayoutCreateInfo-binding-00279 
 --> vkCreateDescriptorSetLayout(): pCreateInfo->pBindings[1].binding is duplicated at pBindings[0].binding.
The Vulkan spec states: If the perStageDescriptorSet feature is not enabled, or flags does not contain VK_DESCRIPTOR_SET_LAYOUT_CREATE_PER_STAGE_BIT_NV, then the VkDescriptorSetLayoutBinding::binding members of the elements of the pBindings array must each have different values (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/descriptorsets.html#VUID-VkDescriptorSetLayoutCreateInfo-binding-00279)
ERROR: VUID-vkGetAccelerationStructureBuildSizesKHR-accelerationStructure-08933 
 --> vkGetAccelerationStructureBuildSizesKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkGetAccelerationStructureBuildSizesKHR-accelerationStructure-08933)
ERROR: VUID-vkCreateAccelerationStructureKHR-accelerationStructure-03611 
 --> vkCreateAccelerationStructureKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkCreateAccelerationStructureKHR-accelerationStructure-03611)
ERROR: VUID-vkGetAccelerationStructureDeviceAddressKHR-accelerationStructure-08935 
 --> vkGetAccelerationStructureDeviceAddressKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkGetAccelerationStructureDeviceAddressKHR-accelerationStructure-08935)
ERROR: VUID-vkCmdBuildAccelerationStructuresKHR-accelerationStructure-08923 
 --> vkCmdBuildAccelerationStructuresKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/accelstructures.html#VUID-vkCmdBuildAccelerationStructuresKHR-accelerationStructure-08923)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-10754 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR when the device does not have accelerationStructure feature enabled.
The Vulkan spec states: If the accelerationStructure feature is not enabled, srcStageMask must not contain VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-10754)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-10754 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR when the device does not have accelerationStructure feature enabled.
The Vulkan spec states: If the accelerationStructure feature is not enabled, dstStageMask must not contain VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-10754)
ERROR: VUID-vkGetAccelerationStructureDeviceAddressKHR-accelerationStructure-08935 
 --> vkGetAccelerationStructureDeviceAddressKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkGetAccelerationStructureDeviceAddressKHR-accelerationStructure-08935)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-10754 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR when the device does not have accelerationStructure feature enabled.
The Vulkan spec states: If the accelerationStructure feature is not enabled, srcStageMask must not contain VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-10754)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-10754 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR when the device does not have accelerationStructure feature enabled.
The Vulkan spec states: If the accelerationStructure feature is not enabled, dstStageMask must not contain VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-10754)
ERROR: VUID-vkGetAccelerationStructureBuildSizesKHR-accelerationStructure-08933 
 --> vkGetAccelerationStructureBuildSizesKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkGetAccelerationStructureBuildSizesKHR-accelerationStructure-08933)
ERROR: VUID-vkCreateAccelerationStructureKHR-accelerationStructure-03611 
 --> vkCreateAccelerationStructureKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkCreateAccelerationStructureKHR-accelerationStructure-03611)
ERROR: VUID-vkGetAccelerationStructureDeviceAddressKHR-accelerationStructure-08935 
 --> vkGetAccelerationStructureDeviceAddressKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/resources.html#VUID-vkGetAccelerationStructureDeviceAddressKHR-accelerationStructure-08935)
ERROR: VUID-vkCmdBuildAccelerationStructuresKHR-accelerationStructure-08923 
 --> vkCmdBuildAccelerationStructuresKHR(): accelerationStructure feature was not enabled.
The Vulkan spec states: The VkPhysicalDeviceAccelerationStructureFeaturesKHR::accelerationStructure feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/accelstructures.html#VUID-vkCmdBuildAccelerationStructuresKHR-accelerationStructure-08923)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-10754 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR when the device does not have accelerationStructure feature enabled.
The Vulkan spec states: If the accelerationStructure feature is not enabled, srcStageMask must not contain VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-10754)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-10754 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR when the device does not have accelerationStructure feature enabled.
The Vulkan spec states: If the accelerationStructure feature is not enabled, dstStageMask must not contain VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-10754)
ERROR: VUID-RuntimeSpirv-shaderSubgroupClock-06267 
 --> vkCreateShaderModule(): SPIR-V uses OpReadClockKHR with a Subgroup scope but shaderSubgroupClock was not enabled.
%124 = OpReadClockKHR %122 %123
Error occurred at C:/Users/chaowei/Desktop/vk_path_tracing_demo/ReSTIR_path_tracer/path_tracer/shaders/raytrace.rgen:28

  uint seed = tea(gl_LaunchIDEXT.y * gl_LaunchSizeEXT.x + gl_LaunchIDEXT.x, int(clockARB()));

The Vulkan spec states: If the shaderSubgroupClock feature is not enabled, the Subgroup scope must not be used for OpReadClockKHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestappendices/spirvenv.html#VUID-RuntimeSpirv-shaderSubgroupClock-06267)
ERROR: VUID-VkShaderModuleCreateInfo-pCode-08740 
 --> vkCreateShaderModule(): SPIR-V Capability RayTracingKHR was declared, but one of the following requirements is required (VkPhysicalDeviceRayTracingPipelineFeaturesKHR::rayTracingPipeline).
The Vulkan spec states: If pCode is a pointer to SPIR-V code, and pCode declares any of the capabilities listed in the SPIR-V Environment appendix, one of the corresponding requirements must be satisfied (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/shaders.html#VUID-VkShaderModuleCreateInfo-pCode-08740)
ERROR: VUID-VkShaderModuleCreateInfo-pCode-08740 
 --> vkCreateShaderModule(): SPIR-V Capability RayTracingKHR was declared, but one of the following requirements is required (VkPhysicalDeviceRayTracingPipelineFeaturesKHR::rayTracingPipeline).
The Vulkan spec states: If pCode is a pointer to SPIR-V code, and pCode declares any of the capabilities listed in the SPIR-V Environment appendix, one of the corresponding requirements must be satisfied (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/shaders.html#VUID-VkShaderModuleCreateInfo-pCode-08740)
ERROR: VUID-VkShaderModuleCreateInfo-pCode-08740 
 --> vkCreateShaderModule(): SPIR-V Capability RayTracingKHR was declared, but one of the following requirements is required (VkPhysicalDeviceRayTracingPipelineFeaturesKHR::rayTracingPipeline).
The Vulkan spec states: If pCode is a pointer to SPIR-V code, and pCode declares any of the capabilities listed in the SPIR-V Environment appendix, one of the corresponding requirements must be satisfied (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/shaders.html#VUID-VkShaderModuleCreateInfo-pCode-08740)
ERROR: VUID-VkShaderModuleCreateInfo-pCode-08740 
 --> vkCreateShaderModule(): SPIR-V Capability RayQueryKHR was declared, but one of the following requirements is required (VkPhysicalDeviceRayQueryFeaturesKHR::rayQuery).
The Vulkan spec states: If pCode is a pointer to SPIR-V code, and pCode declares any of the capabilities listed in the SPIR-V Environment appendix, one of the corresponding requirements must be satisfied (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/shaders.html#VUID-VkShaderModuleCreateInfo-pCode-08740)
ERROR: VUID-VkShaderModuleCreateInfo-pCode-08740 
 --> vkCreateShaderModule(): SPIR-V Capability RayTracingKHR was declared, but one of the following requirements is required (VkPhysicalDeviceRayTracingPipelineFeaturesKHR::rayTracingPipeline).
The Vulkan spec states: If pCode is a pointer to SPIR-V code, and pCode declares any of the capabilities listed in the SPIR-V Environment appendix, one of the corresponding requirements must be satisfied (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/shaders.html#VUID-VkShaderModuleCreateInfo-pCode-08740)
ERROR: VUID-vkCreateRayTracingPipelinesKHR-rayTracingPipeline-03586 
 --> vkCreateRayTracingPipelinesKHR(): the rayTracingPipeline feature was not enabled.
The Vulkan spec states: The rayTracingPipeline feature must be enabled (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/pipelines.html#VUID-vkCreateRayTracingPipelinesKHR-rayTracingPipeline-03586)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkQueueSubmit-pSignalSemaphores-00067 
 --> vkQueueSubmit(): pSubmits[0].pSignalSemaphores[0] (VkSemaphore 0xf000000000f[swapchainWrittenSemaphore:1]) is being signaled by VkQueue 0x71e8620[queueGCT], but it may still be in use by VkSwapchainKHR 0x50000000005[SwapChain::m_swapchain].
Here are the most recently acquired image indices: 0, [1], 2, 0, 0, 0.
(brackets mark the last use of VkSemaphore 0xf000000000f[swapchainWrittenSemaphore:1] in a presentation operation)
Swapchain image 1 was presented but was not re-acquired, so VkSemaphore 0xf000000000f[swapchainWrittenSemaphore:1] may still be in use and cannot be safely reused with image index 0.
Vulkan insight: One solution is to assign each image its own semaphore. This also handles the case where vkAcquireNextImageKHR returns the same index twice in a row. Here are some common methods to ensure that a semaphore passed to vkQueuePresentKHR is not in use and can be safely reused:
	a) Use a separate semaphore per swapchain image. Index these semaphores using the index of the acquired image.
	b) Consider the VK_EXT_swapchain_maintenance1 extension. It allows using a VkFence with the presentation operation.
The Vulkan spec states: Each binary semaphore element of the pSignalSemaphores member of any element of pSubmits must be unsignaled when the semaphore signal operation it defines is executed on the device (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/cmdbuffers.html#VUID-vkQueueSubmit-pSignalSemaphores-00067)
ERROR: VUID-vkCmdPipelineBarrier-srcStageMask-07949 
 --> vkCmdPipelineBarrier(): srcStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, srcStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-srcStageMask-07949)
ERROR: VUID-vkCmdPipelineBarrier-dstStageMask-07949 
 --> vkCmdPipelineBarrier(): dstStageMask includes VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR when the device does not have rayTracing feature enabled.
The Vulkan spec states: If neither the VK_NV_ray_tracing extension or the rayTracingPipeline feature are enabled, dstStageMask must not contain VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR (https://vulkan.lunarg.com/doc/view/1.4.313.0/windows/antora/spec/latestchapters/synchronization.html#VUID-vkCmdPipelineBarrier-dstStageMask-07949)
ERROR: VUID-vkQueueSubmit-pSignalSemaphores-00067 
 --> vkQueueSubmit(): pSubmits[0].pSignalSemaphores[0] (VkSemaphore 0x110000000011[swapchainWrittenSemaphore:2]) is being signaled by VkQueue 0x71e8620[queueGCT], but it may still be in use by VkSwapchainKHR 0x50000000005[SwapChain::m_swapchain].
Here are the most recently acquired image indices: 0, 1, [2], 0, 0, 0, 0.
(brackets mark the last use of VkSemaphore 0x110000000011[swapchainWrittenSemaphore:2] in a presentation operation)
Swapchain image 2 was presented but was not re-acquired, so VkSemaphore 0x110000000011[swapchainWrittenSemaphore:2] may still be in use and cannot be safely reused with image index 0.
Vulkan insight: One solution is to assign each image its own semaphore. This also handles the case where vkAcquireNextImageKHR returns the same index twice in a row. Here are some common methods to ensure that a semaphore passed to vkQueuePresentKHR is not in use and can be safely reused:
	a) Use a separate semaphore per swapchain image. Index these semaphores using the index of the acquired image.
	b) Consider the VK_EXT_swapchain_maintenance1 extension. It allows using a VkFence with the presentation operation.
The Vulkan spec states: Each binary semaphore element of the pSignalSemaphores member of any element of pSubmi